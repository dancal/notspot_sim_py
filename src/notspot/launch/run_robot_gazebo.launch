<launch>

  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- Gazebo Simulation -->
  <!-- Empty World -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find notspot_gazebo)/launch/world/normal.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  
  <arg name="robot" default="$(find notspot_description)/urdf/spotmicroai.urdf"/>
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg robot)" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <arg name="x" default="0"/>
  <arg name="y" default="0"/>
  <arg name="z" default="0.3"/>
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model notspot_gazebo -param robot_description -J front_left_foot 1.8
    -J front_right_leg -0.5 -J front_left_leg -0.5 -J front_right_foot 1.8 -J rear_right_leg -0.5 -J rear_left_leg -0.5 -J rear_right_foot 1.8 -J rear_left_foot 1.8 
    -x $(arg x) -y $(arg y) -z $(arg z)"/>


  <!-- Robot -->
  <!--<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -z 0.5 -model notspot_gazebo"/>-->
  <!--<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-urdf -model notspot_gazebo -param robot_description -x 0.0 -y 0.0 -z 0.2 -R 0.0 -P 0.0 -Y 0.0"/>-->

  <!-- Controllers -->
  <rosparam file="$(find notspot_gazebo)/config/controllers.yaml" command="load"/>
  <node name="controller_spawner" pkg="controller_manager" type="spawner" output="screen" ns="notspot_controller"
          args="front_right_shoulder front_right_foot front_right_leg
                front_left_shoulder front_left_foot front_left_leg
                rear_right_shoulder rear_right_foot rear_right_leg
                rear_left_shoulder rear_left_foot rear_left_leg"/>

  <!-- Robot State Publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher" respawn="false" output="screen">
    <remap from="/joint_states" to="/notspot_controller/joint_states" />
    <param name="publish_frequency" type="double" value="10" />
    <param name="use_tf_static"     value="true"/>
  </node>

  <!-- Robot controller -->
  <node pkg="notspot_controller" type="robot_controller_gazebo.py" name="ROBOT_CONTROLLER" output="screen"/>
  
  <!-- Joystick -->
  <include file="$(find notspot_joystick)/launch/ramped_joystick.launch" />
                                                                                   
</launch>
